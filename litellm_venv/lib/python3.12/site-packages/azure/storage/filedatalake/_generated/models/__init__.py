# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    AclFailedEntry,
    BlobHierarchyListSegment,
    BlobItemInternal,
    BlobPrefix,
    BlobPropertiesInternal,
    CpkInfo,
    FileSystem,
    FileSystemList,
    LeaseAccessConditions,
    ListBlobsHierarchySegmentResponse,
    ModifiedAccessConditions,
    Path,
    PathHTTPHeaders,
    PathList,
    SetAccessControlRecursiveResponse,
    SourceModifiedAccessConditions,
    StorageError,
    StorageErrorError,
)

from ._azure_data_lake_storage_restapi_enums import (  # type: ignore
    LeaseAction,
    ListBlobsIncludeItem,
    PathExpiryOptions,
    PathGetPropertiesAction,
    PathLeaseAction,
    PathRenameMode,
    PathResourceType,
    PathSetAccessControlRecursiveMode,
    PathUpdateAction,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AclFailedEntry",
    "BlobHierarchyListSegment",
    "BlobItemInternal",
    "BlobPrefix",
    "BlobPropertiesInternal",
    "CpkInfo",
    "FileSystem",
    "FileSystemList",
    "LeaseAccessConditions",
    "ListBlobsHierarchySegmentResponse",
    "ModifiedAccessConditions",
    "Path",
    "PathHTTPHeaders",
    "PathList",
    "SetAccessControlRecursiveResponse",
    "SourceModifiedAccessConditions",
    "StorageError",
    "StorageErrorError",
    "LeaseAction",
    "ListBlobsIncludeItem",
    "PathExpiryOptions",
    "PathGetPropertiesAction",
    "PathLeaseAction",
    "PathRenameMode",
    "PathResourceType",
    "PathSetAccessControlRecursiveMode",
    "PathUpdateAction",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()

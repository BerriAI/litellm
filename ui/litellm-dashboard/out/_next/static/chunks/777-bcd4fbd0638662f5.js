"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[777],{777:function(t,e,o){o.d(e,{$I:function(){return B},AZ:function(){return C},Au:function(){return $},BL:function(){return ti},Br:function(){return g},Dj:function(){return ty},E9:function(){return th},EY:function(){return tu},FC:function(){return U},Gh:function(){return to},HK:function(){return V},I1:function(){return k},J$:function(){return J},K_:function(){return tp},N8:function(){return P},NV:function(){return w},Nc:function(){return te},O3:function(){return ts},OU:function(){return X},Og:function(){return h},Ov:function(){return f},PT:function(){return b},Qy:function(){return E},RQ:function(){return u},Rg:function(){return O},So:function(){return v},W_:function(){return j},X:function(){return I},XO:function(){return p},Xd:function(){return W},Xm:function(){return T},YU:function(){return tl},Zr:function(){return d},ao:function(){return td},b1:function(){return M},cu:function(){return ta},e2:function(){return Q},eH:function(){return x},fP:function(){return S},hT:function(){return tt},hy:function(){return l},j2:function(){return R},jA:function(){return tw},jE:function(){return tc},kK:function(){return i},kn:function(){return F},lg:function(){return Y},mR:function(){return G},m_:function(){return _},n$:function(){return q},o6:function(){return z},pf:function(){return tn},qm:function(){return s},rs:function(){return m},tN:function(){return Z},um:function(){return tr},v9:function(){return H},wX:function(){return y},wd:function(){return D},xA:function(){return L},zg:function(){return K}});var r=o(80588);let a=0,n=t=>new Promise(e=>setTimeout(e,t)),c=async t=>{let e=Date.now();e-a>6e4?(t.includes("Authentication Error - Expired Key")?(r.ZP.info("UI Session Expired. Logging out."),a=e,await n(3e3),window.location.href="/"):r.ZP.error(t),a=e):console.log("Error suppressed to prevent spam:",t)},s=async t=>{try{let e=await fetch("/get/litellm_model_cost_map",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}}),o=await e.json();return console.log("received litellm model cost data: ".concat(o)),o}catch(t){throw console.error("Failed to get model cost map:",t),t}},i=async(t,e)=>{try{let o=await fetch("/model/new",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({...e})});if(!o.ok){let t=await o.text();throw console.error("Error response from the server:",t),Error("Network response was not ok")}let a=await o.json();return console.log("API Response:",a),r.ZP.success("Model created successfully. Wait 60s and refresh on 'All Models' page"),a}catch(t){throw console.error("Failed to create key:",t),t}},l=async t=>{try{let e=await fetch("/model/settings",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}return await e.json()}catch(t){throw console.error("Failed to get callbacks:",t),t}},h=async(t,e)=>{console.log("model_id in model delete call: ".concat(e));try{let o=await fetch("/model/delete",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({id:e})});if(!o.ok){let t=await o.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let a=await o.json();return console.log("API Response:",a),r.ZP.success("Model deleted successfully. Restart server to see this."),a}catch(t){throw console.error("Failed to create key:",t),t}},w=async(t,e)=>{if(console.log("budget_id in budget delete call: ".concat(e)),null!=t)try{let o=await fetch("/budget/delete",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({id:e})});if(!o.ok){let t=await o.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let r=await o.json();return console.log("API Response:",r),r}catch(t){throw console.error("Failed to create key:",t),t}},d=async(t,e)=>{try{console.log("Form Values in budgetCreateCall:",e),console.log("Form Values after check:",e);let o=await fetch("/budget/new",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({...e})});if(!o.ok){let t=await o.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let r=await o.json();return console.log("API Response:",r),r}catch(t){throw console.error("Failed to create key:",t),t}},p=async(t,e)=>{try{let o=await fetch("/invitation/new",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({user_id:e})});if(!o.ok){let t=await o.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let r=await o.json();return console.log("API Response:",r),r}catch(t){throw console.error("Failed to create key:",t),t}},u=async t=>{try{let e=await fetch("/alerting/settings",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}return await e.json()}catch(t){throw console.error("Failed to get callbacks:",t),t}},y=async(t,e,o)=>{try{if(console.log("Form Values in keyCreateCall:",o),o.description&&(o.metadata||(o.metadata={}),o.metadata.description=o.description,delete o.description,o.metadata=JSON.stringify(o.metadata)),o.metadata){console.log("formValues.metadata:",o.metadata);try{o.metadata=JSON.parse(o.metadata)}catch(t){throw Error("Failed to parse metadata: "+t)}}console.log("Form Values after check:",o);let r=await fetch("/key/generate",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({user_id:e,...o})});if(!r.ok){let t=await r.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let a=await r.json();return console.log("API Response:",a),a}catch(t){throw console.error("Failed to create key:",t),t}},f=async(t,e,o)=>{try{if(console.log("Form Values in keyCreateCall:",o),o.description&&(o.metadata||(o.metadata={}),o.metadata.description=o.description,delete o.description,o.metadata=JSON.stringify(o.metadata)),o.metadata){console.log("formValues.metadata:",o.metadata);try{o.metadata=JSON.parse(o.metadata)}catch(t){throw Error("Failed to parse metadata: "+t)}}console.log("Form Values after check:",o);let r=await fetch("/user/new",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({user_id:e,...o})});if(!r.ok){let t=await r.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let a=await r.json();return console.log("API Response:",a),a}catch(t){throw console.error("Failed to create key:",t),t}},k=async(t,e)=>{try{console.log("in keyDeleteCall:",e);let o=await fetch("/key/delete",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({keys:[e]})});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}let r=await o.json();return console.log(r),r}catch(t){throw console.error("Failed to create key:",t),t}},m=async(t,e)=>{try{console.log("in teamDeleteCall:",e);let o=await fetch("/team/delete",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({team_ids:[e]})});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}let r=await o.json();return console.log(r),r}catch(t){throw console.error("Failed to delete key:",t),t}},g=async function(t,e,o){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0;try{let s="/user/info";"App Owner"==o&&e&&(s="".concat(s,"?user_id=").concat(e)),"App User"==o&&e&&(s="".concat(s,"?user_id=").concat(e)),("Internal User"==o||"Internal Viewer"==o)&&e&&(s="".concat(s,"?user_id=").concat(e)),console.log("in userInfoCall viewAll=",r),r&&n&&null!=a&&void 0!=a&&(s="".concat(s,"?view_all=true&page=").concat(a,"&page_size=").concat(n));let i=await fetch(s,{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!i.ok){let t=await i.text();throw c(t),Error("Network response was not ok")}let l=await i.json();return console.log("API Response:",l),l}catch(t){throw console.error("Failed to create key:",t),t}},T=async(t,e)=>{try{let o="/team/info";e&&(o="".concat(o,"?team_id=").concat(e)),console.log("in teamInfoCall");let r=await fetch(o,{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!r.ok){let t=await r.text();throw c(t),Error("Network response was not ok")}let a=await r.json();return console.log("API Response:",a),a}catch(t){throw console.error("Failed to create key:",t),t}},E=async t=>{try{let e=await fetch("/global/spend",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}return await e.json()}catch(t){throw console.error("Failed to create key:",t),t}},j=async t=>{try{let e="/onboarding/get_token";e+="?invite_link=".concat(t);let o=await fetch(e,{method:"GET",headers:{"Content-Type":"application/json"}});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}return await o.json()}catch(t){throw console.error("Failed to create key:",t),t}},_=async(t,e,o,r)=>{try{let a=await fetch("/onboarding/claim_token",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({invitation_link:e,user_id:o,password:r})});if(!a.ok){let t=await a.text();throw c(t),Error("Network response was not ok")}let n=await a.json();return console.log(n),n}catch(t){throw console.error("Failed to delete key:",t),t}},N=!1,A=null,C=async(t,e,o)=>{try{let e=await fetch("/v2/model/info",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw t+="error shown=".concat(N),N||(t.includes("No model list passed")&&(t="No Models Exist. Click Add Model to get started."),r.ZP.info(t,10),N=!0,A&&clearTimeout(A),A=setTimeout(()=>{N=!1},1e4)),Error("Network response was not ok")}let o=await e.json();return console.log("modelInfoCall:",o),o}catch(t){throw console.error("Failed to create key:",t),t}},F=async t=>{try{let e=await fetch("/model_group/info",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok)throw await e.text(),Error("Network response was not ok");let o=await e.json();return console.log("modelHubCall:",o),o}catch(t){throw console.error("Failed to create key:",t),t}},b=async t=>{try{let e=await fetch("/get/allowed_ips",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw Error("Network response was not ok: ".concat(t))}let o=await e.json();return console.log("getAllowedIPs:",o),o.data}catch(t){throw console.error("Failed to get allowed IPs:",t),t}},x=async(t,e)=>{try{let o=await fetch("/add/allowed_ip",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({ip:e})});if(!o.ok){let t=await o.text();throw Error("Network response was not ok: ".concat(t))}let r=await o.json();return console.log("addAllowedIP:",r),r}catch(t){throw console.error("Failed to add allowed IP:",t),t}},B=async(t,e)=>{try{let o=await fetch("/delete/allowed_ip",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({ip:e})});if(!o.ok){let t=await o.text();throw Error("Network response was not ok: ".concat(t))}let r=await o.json();return console.log("deleteAllowedIP:",r),r}catch(t){throw console.error("Failed to delete allowed IP:",t),t}},z=async(t,e,o,r,a,n,s,i)=>{try{let e="/model/metrics";r&&(e="".concat(e,"?_selected_model_group=").concat(r,"&startTime=").concat(a,"&endTime=").concat(n,"&api_key=").concat(s,"&customer=").concat(i));let o=await fetch(e,{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}return await o.json()}catch(t){throw console.error("Failed to create key:",t),t}},O=async(t,e,o,r)=>{try{let a="/model/streaming_metrics";e&&(a="".concat(a,"?_selected_model_group=").concat(e,"&startTime=").concat(o,"&endTime=").concat(r));let n=await fetch(a,{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!n.ok){let t=await n.text();throw c(t),Error("Network response was not ok")}return await n.json()}catch(t){throw console.error("Failed to create key:",t),t}},S=async(t,e,o,r,a,n,s,i)=>{try{let e="/model/metrics/slow_responses";r&&(e="".concat(e,"?_selected_model_group=").concat(r,"&startTime=").concat(a,"&endTime=").concat(n,"&api_key=").concat(s,"&customer=").concat(i));let o=await fetch(e,{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}return await o.json()}catch(t){throw console.error("Failed to create key:",t),t}},P=async(t,e,o,r,a,n,s,i)=>{try{let e="/model/metrics/exceptions";r&&(e="".concat(e,"?_selected_model_group=").concat(r,"&startTime=").concat(a,"&endTime=").concat(n,"&api_key=").concat(s,"&customer=").concat(i));let o=await fetch(e,{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}return await o.json()}catch(t){throw console.error("Failed to create key:",t),t}},v=async(t,e,o)=>{try{let e=await fetch("/models",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}return await e.json()}catch(t){throw console.error("Failed to create key:",t),t}},G=async t=>{try{let e="/global/spend/teams";console.log("in teamSpendLogsCall:",e);let o=await fetch("".concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}let r=await o.json();return console.log(r),r}catch(t){throw console.error("Failed to create key:",t),t}},J=async(t,e,o,r)=>{try{let a="/global/spend/tags";e&&o&&(a="".concat(a,"?start_date=").concat(e,"&end_date=").concat(o)),r&&(a+="".concat(a,"&tags=").concat(r.join(","))),console.log("in tagsSpendLogsCall:",a);let n=await fetch("".concat(a),{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!n.ok)throw await n.text(),Error("Network response was not ok");let c=await n.json();return console.log(c),c}catch(t){throw console.error("Failed to create key:",t),t}},I=async t=>{try{let e="/global/spend/all_tag_names";console.log("in global/spend/all_tag_names call",e);let o=await fetch("".concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!o.ok)throw await o.text(),Error("Network response was not ok");let r=await o.json();return console.log(r),r}catch(t){throw console.error("Failed to create key:",t),t}},R=async t=>{try{let e="/global/all_end_users";console.log("in global/all_end_users call",e);let o=await fetch("".concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!o.ok)throw await o.text(),Error("Network response was not ok");let r=await o.json();return console.log(r),r}catch(t){throw console.error("Failed to create key:",t),t}},V=async(t,e,o,r,a,n)=>{try{console.log("user role in spend logs call: ".concat(o));let e="/spend/logs";e="App Owner"==o?"".concat(e,"?user_id=").concat(r,"&start_date=").concat(a,"&end_date=").concat(n):"".concat(e,"?start_date=").concat(a,"&end_date=").concat(n);let s=await fetch(e,{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!s.ok){let t=await s.text();throw c(t),Error("Network response was not ok")}let i=await s.json();return console.log(i),i}catch(t){throw console.error("Failed to create key:",t),t}},U=async t=>{try{let e=await fetch("/global/spend/logs",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}let o=await e.json();return console.log(o),o}catch(t){throw console.error("Failed to create key:",t),t}},Z=async t=>{try{let e=await fetch("/global/spend/keys?limit=5",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}let o=await e.json();return console.log(o),o}catch(t){throw console.error("Failed to create key:",t),t}},M=async(t,e,o,r)=>{try{let a="";a=e?JSON.stringify({api_key:e,startTime:o,endTime:r}):JSON.stringify({startTime:o,endTime:r});let n={method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}};n.body=a;let s=await fetch("/global/spend/end_users",n);if(!s.ok){let t=await s.text();throw c(t),Error("Network response was not ok")}let i=await s.json();return console.log(i),i}catch(t){throw console.error("Failed to create key:",t),t}},X=async(t,e,o,r)=>{try{let a="/global/spend/provider";o&&r&&(a+="?start_date=".concat(o,"&end_date=").concat(r)),e&&(a+="&api_key=".concat(e));let n=await fetch(a,{method:"GET",headers:{Authorization:"Bearer ".concat(t)}});if(!n.ok){let t=await n.text();throw c(t),Error("Network response was not ok")}let s=await n.json();return console.log(s),s}catch(t){throw console.error("Failed to fetch spend data:",t),t}},D=async(t,e,o)=>{try{let r="/global/activity";e&&o&&(r+="?start_date=".concat(e,"&end_date=").concat(o));let a=await fetch(r,{method:"GET",headers:{Authorization:"Bearer ".concat(t)}});if(!a.ok)throw await a.text(),Error("Network response was not ok");let n=await a.json();return console.log(n),n}catch(t){throw console.error("Failed to fetch spend data:",t),t}},K=async(t,e,o)=>{try{let r="/global/activity/cache_hits";e&&o&&(r+="?start_date=".concat(e,"&end_date=").concat(o));let a=await fetch(r,{method:"GET",headers:{Authorization:"Bearer ".concat(t)}});if(!a.ok)throw await a.text(),Error("Network response was not ok");let n=await a.json();return console.log(n),n}catch(t){throw console.error("Failed to fetch spend data:",t),t}},L=async(t,e,o)=>{try{let r="/global/activity/model";e&&o&&(r+="?start_date=".concat(e,"&end_date=").concat(o));let a=await fetch(r,{method:"GET",headers:{Authorization:"Bearer ".concat(t)}});if(!a.ok)throw await a.text(),Error("Network response was not ok");let n=await a.json();return console.log(n),n}catch(t){throw console.error("Failed to fetch spend data:",t),t}},q=async(t,e,o,r)=>{try{let a="/global/activity/exceptions";e&&o&&(a+="?start_date=".concat(e,"&end_date=").concat(o)),r&&(a+="&model_group=".concat(r));let n=await fetch(a,{method:"GET",headers:{Authorization:"Bearer ".concat(t)}});if(!n.ok)throw await n.text(),Error("Network response was not ok");let c=await n.json();return console.log(c),c}catch(t){throw console.error("Failed to fetch spend data:",t),t}},H=async(t,e,o,r)=>{try{let a="/global/activity/exceptions/deployment";e&&o&&(a+="?start_date=".concat(e,"&end_date=").concat(o)),r&&(a+="&model_group=".concat(r));let n=await fetch(a,{method:"GET",headers:{Authorization:"Bearer ".concat(t)}});if(!n.ok)throw await n.text(),Error("Network response was not ok");let c=await n.json();return console.log(c),c}catch(t){throw console.error("Failed to fetch spend data:",t),t}},$=async t=>{try{let e=await fetch("/global/spend/models?limit=5",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}let o=await e.json();return console.log(o),o}catch(t){throw console.error("Failed to create key:",t),t}},Q=async(t,e)=>{try{let o=await fetch("/v2/key/info",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({keys:e})});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}let r=await o.json();return console.log(r),r}catch(t){throw console.error("Failed to create key:",t),t}},W=async(t,e)=>{try{let o="/user/get_users?role=".concat(e);console.log("in userGetAllUsersCall:",o);let r=await fetch(o,{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!r.ok){let t=await r.text();throw c(t),Error("Network response was not ok")}let a=await r.json();return console.log(a),a}catch(t){throw console.error("Failed to get requested models:",t),t}},Y=async t=>{try{let e=await fetch("/user/available_roles",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok)throw await e.text(),Error("Network response was not ok");let o=await e.json();return console.log("response from user/available_role",o),o}catch(t){throw t}},tt=async(t,e)=>{try{console.log("Form Values in teamCreateCall:",e);let o=await fetch("/team/new",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({...e})});if(!o.ok){let t=await o.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let r=await o.json();return console.log("API Response:",r),r}catch(t){throw console.error("Failed to create key:",t),t}},te=async(t,e)=>{try{console.log("Form Values in keyUpdateCall:",e);let o=await fetch("/key/update",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({...e})});if(!o.ok){let t=await o.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let r=await o.json();return console.log("Update key Response:",r),r}catch(t){throw console.error("Failed to create key:",t),t}},to=async(t,e)=>{try{console.log("Form Values in teamUpateCall:",e);let o=await fetch("/team/update",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({...e})});if(!o.ok){let t=await o.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let r=await o.json();return console.log("Update Team Response:",r),r}catch(t){throw console.error("Failed to create key:",t),t}},tr=async(t,e)=>{try{console.log("Form Values in modelUpateCall:",e);let o=await fetch("/model/update",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({...e})});if(!o.ok){let t=await o.text();throw c(t),console.error("Error update from the server:",t),Error("Network response was not ok")}let r=await o.json();return console.log("Update model Response:",r),r}catch(t){throw console.error("Failed to update model:",t),t}},ta=async(t,e,o)=>{try{console.log("Form Values in teamMemberAddCall:",o);let r=await fetch("/team/member_add",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({team_id:e,member:o})});if(!r.ok){let t=await r.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let a=await r.json();return console.log("API Response:",a),a}catch(t){throw console.error("Failed to create key:",t),t}},tn=async(t,e,o)=>{try{console.log("Form Values in userUpdateUserCall:",e);let r={...e};null!==o&&(r.user_role=o),r=JSON.stringify(r);let a=await fetch("/user/update",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:r});if(!a.ok){let t=await a.text();throw c(t),console.error("Error response from the server:",t),Error("Network response was not ok")}let n=await a.json();return console.log("API Response:",n),n}catch(t){throw console.error("Failed to create key:",t),t}},tc=async(t,e)=>{try{let o="/health/services?service=".concat(e);console.log("Checking Slack Budget Alerts service health");let a=await fetch(o,{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!a.ok){let t=await a.text();throw c(t),Error(t)}let n=await a.json();return r.ZP.success("Test request to ".concat(e," made - check logs/alerts on ").concat(e," to verify")),n}catch(t){throw console.error("Failed to perform health check:",t),t}},ts=async t=>{try{let e=await fetch("/budget/list",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}return await e.json()}catch(t){throw console.error("Failed to get callbacks:",t),t}},ti=async(t,e,o)=>{try{let e=await fetch("/get/config/callbacks",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}return await e.json()}catch(t){throw console.error("Failed to get callbacks:",t),t}},tl=async t=>{try{let e=await fetch("/config/list?config_type=general_settings",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}return await e.json()}catch(t){throw console.error("Failed to get callbacks:",t),t}},th=async(t,e)=>{try{let o=await fetch("/config/field/info?field_name=".concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!o.ok)throw await o.text(),Error("Network response was not ok");return await o.json()}catch(t){throw console.error("Failed to set callbacks:",t),t}},tw=async(t,e,o)=>{try{let a=await fetch("/config/field/update",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({field_name:e,field_value:o,config_type:"general_settings"})});if(!a.ok){let t=await a.text();throw c(t),Error("Network response was not ok")}let n=await a.json();return r.ZP.success("Successfully updated value!"),n}catch(t){throw console.error("Failed to set callbacks:",t),t}},td=async(t,e)=>{try{let o=await fetch("/config/field/delete",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({field_name:e,config_type:"general_settings"})});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}let a=await o.json();return r.ZP.success("Field reset on proxy"),a}catch(t){throw console.error("Failed to get callbacks:",t),t}},tp=async(t,e)=>{try{let o=await fetch("/config/update",{method:"POST",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"},body:JSON.stringify({...e})});if(!o.ok){let t=await o.text();throw c(t),Error("Network response was not ok")}return await o.json()}catch(t){throw console.error("Failed to set callbacks:",t),t}},tu=async t=>{try{let e=await fetch("/health",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok){let t=await e.text();throw c(t),Error("Network response was not ok")}return await e.json()}catch(t){throw console.error("Failed to call /health:",t),t}},ty=async t=>{try{let e=await fetch("/sso/get/logout_url",{method:"GET",headers:{Authorization:"Bearer ".concat(t),"Content-Type":"application/json"}});if(!e.ok)throw await e.text(),Error("Network response was not ok");return await e.json()}catch(t){throw console.error("Failed to get callbacks:",t),t}}}}]);
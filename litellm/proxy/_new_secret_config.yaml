model_list:
- model_name: fake-openai-endpoint
  litellm_params:
    model: openai/my-fake-model
    api_key: my-fake-key
    api_base: https://openai-function-calling-workers.tasslexyz.workers.dev/
    stream_timeout: 0.001
- model_name: fake-openai-endpoint
  litellm_params:
    model: openai/my-fake-model-2
    api_key: my-fake-key
    api_base: https://openai-function-calling-workers.tasslexyz.workers.dev/
    stream_timeout: 0.001
- litellm_params:
      model: azure/chatgpt-v-2
      api_base: os.environ/AZURE_API_BASE
      api_key: os.environ/AZURE_API_KEY
      api_version: "2023-07-01-preview"
      stream_timeout: 0.001
  model_name: azure-gpt-3.5
# - model_name: text-embedding-ada-002
#   litellm_params:
#     model: text-embedding-ada-002
#     api_key: os.environ/OPENAI_API_KEY
- model_name: gpt-instruct
  litellm_params:
    model: text-completion-openai/gpt-3.5-turbo-instruct
    # api_key: my-fake-key
    # api_base: https://exampleopenaiendpoint-production.up.railway.app/

router_settings:
  # routing_strategy: usage-based-routing-v2 
  # redis_url: "os.environ/REDIS_URL"
  redis_host: os.environ/REDIS_HOST
  redis_port: os.environ/REDIS_PORT
  redis_password: os.environ/REDIS_PASSWORD
  enable_pre_call_checks: True

litellm_settings:
  num_retries: 3 # retry call 3 times on each model_name
  allowed_fails: 3 # cooldown model if it fails > 1 call in a minute.
  success_callback: ["prometheus"]
  failure_callback: ["prometheus"]
  service_callback: ["prometheus_system"]


general_settings:
  alerting: ["slack"]
  alerting_threshold: 300 # sends alerts if requests hang for 5min+ and responses take 5min+
  proxy_batch_write_at: 60 # Frequency of batch writing logs to server (in seconds)